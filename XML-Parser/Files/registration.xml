<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <flow name="getRegistrationPidmFlow">
      <set-variable variableName="flowName" value="getRegistrationPidmFlow" doc:name="Set flow variable for flowName" />
      <logger message="projectName=#[flowVars.projectName],flowName=#[flowVars.flowName],logProcessId=#[flowVars.logUUID],message=&quot;START&quot;"
          level="INFO" doc:name="Log generic flow details" category="edu.usf.esb.${app.application.name}" />
        <set-variable variableName="pidm" value="#[payload.pidm]" doc:name="pidm"/>
        <flow-ref name="getRegistrationFlow" doc:name="getRegistrationFlow"/>
    </flow>
    <flow name="getCurrRegFlow">
      <set-variable variableName="flowName" value="getCurrRegFlow" doc:name="Set flow variable for flowName" />
      <logger message="projectName=#[flowVars.projectName],flowName=#[flowVars.flowName],logProcessId=#[flowVars.logUUID],message=&quot;START&quot;"
          level="INFO" doc:name="Log generic flow details" category="edu.usf.esb.${app.application.name}" />
        <db:select config-ref="Oracle_Configuration_BANNER" doc:name="getRegistrationFlow">
            <db:parameterized-query><![CDATA[select f.sfrstcr_crn crseCrn , NVL(ssbsect_crse_title,scbcrse_title) crsTitle
            from sfrstcr f
            INNER JOIN ssbsect c
            ON (f.sfrstcr_crn = c.ssbsect_crn
             AND c.ssbsect_term_code = f.sfrstcr_term_code
             AND c.ssbsect_ptrm_code = f.sfrstcr_ptrm_code)
            INNER JOIN  scbcrse
            ON( scbcrse_crse_numb = ssbsect_crse_numb AND
            scbcrse_subj_code = ssbsect_subj_code  AND
            scbcrse_eff_term=(SELECT MAX(c2.scbcrse_eff_term) from scbcrse c2
                                     WHERE c2.scbcrse_crse_numb = ssbsect_crse_numb
                                     AND   c2.scbcrse_subj_code = ssbsect_subj_code) )
            inner join stvrsts fr
            ON(f.sfrstcr_rsts_code = fr.stvrsts_code
              AND fr.stvrsts_incl_sect_enrl ='Y')
            where f.sfrstcr_pidm=#[flowVars.pidm]
             AND  f.sfrstcr_term_code=#[flowVars.currentTerm]]]></db:parameterized-query>
        </db:select>
        <set-variable variableName="curReg" value="#[payload]" doc:name="curReg"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
flowVars.curReg map ((reg , indexOfreg) -> {

		"courseNumber" : reg.crseCrn,
		"courseTitle" : reg.crsTitle

	})
]]></dw:set-payload>
        </dw:transform-message>
        <logger message="projectName=#[flowVars.projectName],flowName=&quot;getCurrRegFlow&quot;,logProcessId=#[flowVars.logUUID],message=&quot;FINISH&quot;"
            level="DEBUG" doc:name="Log timing" category="edu.usf.esb.${app.application.name}" />
    </flow>
    <flow name="getFtrRegFlow">
      <set-variable variableName="flowName" value="getFtrRegFlow" doc:name="Set flow variable for flowName" />
      <logger message="projectName=#[flowVars.projectName],flowName=#[flowVars.flowName],logProcessId=#[flowVars.logUUID],message=&quot;START&quot;"
          level="INFO" doc:name="Log generic flow details" category="edu.usf.esb.${app.application.name}" />
        <db:select config-ref="Oracle_Configuration_BANNER" doc:name="getFtrRegistration">
            <db:parameterized-query><![CDATA[select f.sfrstcr_crn crseCrn , NVL(ssbsect_crse_title,scbcrse_title) crsTitle
            from sfrstcr f
            INNER JOIN ssbsect c
            ON (f.sfrstcr_crn = c.ssbsect_crn
             AND c.ssbsect_term_code = f.sfrstcr_term_code
             AND c.ssbsect_ptrm_code = f.sfrstcr_ptrm_code)
            INNER JOIN  scbcrse
            ON( scbcrse_crse_numb = ssbsect_crse_numb AND
            scbcrse_subj_code = ssbsect_subj_code  AND
            scbcrse_eff_term=(SELECT MAX(c2.scbcrse_eff_term) from scbcrse c2
                                     WHERE c2.scbcrse_crse_numb = ssbsect_crse_numb
                                     AND   c2.scbcrse_subj_code = ssbsect_subj_code) )
            inner join stvrsts fr
            ON(f.sfrstcr_rsts_code = fr.stvrsts_code
              AND fr.stvrsts_incl_sect_enrl ='Y')
            where f.sfrstcr_pidm=#[flowVars.pidm]
             AND  f.sfrstcr_term_code=#[flowVars.futureTerm]]]></db:parameterized-query>
        </db:select>
        <set-variable variableName="ftrReg" value="#[payload]" doc:name="ftrReg"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
flowVars.ftrReg map ((reg , indexOfreg) -> {

		"courseNumber" : reg.crseCrn,
		"courseTitle" : reg.crsTitle

	})
]]></dw:set-payload>
        </dw:transform-message>
        <logger message="projectName=#[flowVars.projectName],flowName=&quot;getFtrRegFlow&quot;,logProcessId=#[flowVars.logUUID],message=&quot;FINISH&quot;"
            level="DEBUG" doc:name="Log timing" category="edu.usf.esb.${app.application.name}" />
    </flow>
    <flow name="getRegistrationFlow">
      <set-variable variableName="flowName" value="getRegistrationFlow" doc:name="Set flow variable for flowName" />
      <logger message="projectName=#[flowVars.projectName],flowName=#[flowVars.flowName],logProcessId=#[flowVars.logUUID],message=&quot;START&quot;"
          level="INFO" doc:name="Log generic flow details" category="edu.usf.esb.${app.application.name}" />
        <scatter-gather doc:name="Scatter-Gather">
            <processor-chain>
                <flow-ref name="getCurrRegFlow" doc:name="getCurrRegFlow"/>
                <set-variable variableName="currentReg" value="#[payload]" doc:name="currentReg"/>
            </processor-chain>
            <processor-chain>
                <flow-ref name="getFtrRegFlow" doc:name="getFtrRegFlow"/>
                <set-variable variableName="futureReg" value="#[payload]" doc:name="futureReg"/>
            </processor-chain>
        </scatter-gather>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
%var currReg=payload[0]
%var ftrReg=payload[1]
%var main=flowVars.mainPayload[0]
---
{
"firstName"	: main.firstName,
"lastName" : main.lastName,
"registrations":
{
	"currentRegistration":currReg,
	"futureRegistration" :ftrReg
}

}
]]></dw:set-payload>
        </dw:transform-message>
        <logger message="projectName=#[flowVars.projectName],flowName=&quot;getRegistrationFlow&quot;,logProcessId=#[flowVars.logUUID],message=&quot;FINISH&quot;"
            level="DEBUG" doc:name="Log timing" category="edu.usf.esb.${app.application.name}" />
    </flow>
</mule>
