­
;C:\Projects\XML-Parser\XML-Parser\App_Start\BundleConfig.cs
	namespace 	

XML_Parser
 
{ 
public 

class 
BundleConfig 
{ 
public		 
static		 
void		 
RegisterBundles		 *
(		* +
BundleCollection		+ ;
bundles		< C
)		C D
{

 	
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) ;
); <
.< =
Include= D
(D E
$str 7
)7 8
)8 9
;9 :
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) =
)= >
.> ?
Include? F
(F G
$str	 +
)+ ,
), -
;- .
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) >
)> ?
.? @
Include@ G
(G H
$str 4
)4 5
)5 6
;6 7
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) >
)> ?
.? @
Include@ G
(G H
$str /
)/ 0
)0 1
;1 2
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) >
)> ?
.? @
Include@ G
(G H
$str 2
,2 3
$str 0
)0 1
)1 2
;2 3
bundles 
. 
Add 
( 
new 
StyleBundle '
(' (
$str( 7
)7 8
.8 9
Include9 @
(@ A
$str 3
,3 4
$str *
)* +
)+ ,
;, -
bundles!! 
.!! 
Add!! 
(!! 
new!! 
StyleBundle!! '
(!!' (
$str!!( F
)!!F G
.!!G H
Include!!H O
(!!O P
$str"" K
,""K L
$str## M
)$$ 
)$$ 
;$$ 
bundles&& 
.&& 
Add&& 
(&& 
new&& 
ScriptBundle&& (
(&&( )
$str&&) G
)&&G H
.&&H I
Include&&I P
(&&P Q
$str(( M
,((M N
$str)) @
,))@ A
$str,, 8
,,,8 9
$str.. 2
,..2 3
$str00 :
,00: ;
$str44 5
)66 
)66 
;66 
}77 	
}88 
}99 è
;C:\Projects\XML-Parser\XML-Parser\App_Start\FilterConfig.cs
	namespace 	

XML_Parser
 
{ 
public 

class 
FilterConfig 
{ 
public 
static 
void !
RegisterGlobalFilters 0
(0 1"
GlobalFilterCollection1 G
filtersH O
)O P
{		 	
filters

 
.

 
Add

 
(

 
new

  
HandleErrorAttribute

 0
(

0 1
)

1 2
)

2 3
;

3 4
} 	
} 
} Æ
:C:\Projects\XML-Parser\XML-Parser\App_Start\RouteConfig.cs
	namespace 	

XML_Parser
 
{		 
public

 

class

 
RouteConfig

 
{ 
public 
static 
void 
RegisterRoutes )
() *
RouteCollection* 9
routes: @
)@ A
{ 	
routes 
. 
IgnoreRoute 
( 
$str ;
); <
;< =
routes 
. 
MapRoute 
( 
name 
: 
$str 
,  
url 
: 
$str 1
,1 2
defaults 
: 
new 
{ 

controller  *
=+ ,
$str- 9
,9 :
action; A
=B C
$strD K
,K L
idM O
=P Q
UrlParameterR ^
.^ _
Optional_ g
}h i
) 
; 
} 	
} 
} Õ2
EC:\Projects\XML-Parser\XML-Parser\Controllers\FileUploadController.cs
	namespace 	

XML_Parser
 
. 
Controllers  
{ 
public 

class  
FileUploadController %
:& '

Controller( 2
{ 
FilesHelper 
filesHelper 
;  
String 
tempPath 
= 
$str 
; 
String 
serverMapPath 
= 
$str )
;) *
private 
string 
StorageRoot "
{ 	
get 
{ 
return 
Path 
. 
Combine %
(% &
HostingEnvironment& 8
.8 9
MapPath9 @
(@ A
serverMapPathA N
)N O
)O P
;P Q
}R S
} 	
private 
string 
UrlBase 
=  
$str! *
;* +
String 
	DeleteURL 
= 
$str 9
;9 :
String 

DeleteType 
= 
$str !
;! "
public  
FileUploadController #
(# $
)$ %
{ 	
filesHelper 
= 
new 
FilesHelper )
() *
	DeleteURL* 3
,3 4

DeleteType5 ?
,? @
StorageRootA L
,L M
UrlBaseN U
,U V
tempPathW _
,_ `
serverMapPatha n
)n o
;o p
}   	
public"" 
ActionResult"" 
Index"" !
(""! "
)""" #
{## 	
ViewData$$ 
[$$ 
$str$$ 
]$$ 
=$$ 
$str$$  +
;$$+ ,
return%% 
View%% 
(%% 
)%% 
;%% 
}&& 	
public(( 
ActionResult(( 
ViewXml(( #
(((# $
string(($ *
fileName((+ 3
)((3 4
{)) 	
try** 
{++ 
if,, 
(,, 
string,, 
.,, 
IsNullOrEmpty,, (
(,,( )
fileName,,) 1
),,1 2
),,2 3
{-- 
return.. 
View.. 
(..  
new..  #
XmlViewModel..$ 0
{..1 2
isEmptyParam..3 ?
=..@ A
true..B F
}..G H
)..H I
;..I J
}// 
var11 
filePath11 
=11 
Server11 %
.11% &
MapPath11& -
(11- .
Url11. 1
.111 2
Content112 9
(119 :
$str11: D
+11E F
fileName11G O
)11O P
)11P Q
;11Q R
XmlDocument33 
doc33 
=33  !
new33" %
XmlDocument33& 1
(331 2
)332 3
;333 4
doc44 
.44 
Load44 
(44 
filePath44 !
)44! "
;44" #
Document66 
parsedContent66 &
=66' (
	XmlHelper66) 2
.662 3
ParseXml663 ;
(66; <
doc66< ?
)66? @
;66@ A
var88 

xmlContent88 
=88  
new88! $
XmlViewModel88% 1
{882 3
name884 8
=889 :
fileName88; C
,88C D
	parsedXml88E N
=88O P
parsedContent88Q ^
}88_ `
;88` a
return99 
View99 
(99 

xmlContent99 &
)99& '
;99' (
}:: 
catch;; 
(;; !
FileNotFoundException;; (
e;;) *
);;* +
{<< 
return== 
View== 
(== 
new== 
XmlViewModel==  ,
{==- .
isEmptyParam==/ ;
===< =
true==> B
}==C D
)==D E
;==E F
}>> 
}?? 	
[AA 	
HttpPostAA	 
]AA 
publicBB 

JsonResultBB 
UploadBB  
(BB  !
)BB! "
{CC 	
varDD 

resultListDD 
=DD 
newDD  
ListDD! %
<DD% &%
ViewDataUploadFilesResultDD& ?
>DD? @
(DD@ A
)DDA B
;DDB C
varFF 
CurrentContextFF 
=FF  
HttpContextFF! ,
;FF, -
filesHelperHH 
.HH  
UploadAndShowResultsHH ,
(HH, -
CurrentContextHH- ;
,HH; <

resultListHH= G
)HHG H
;HHH I
	JsonFilesII 
filesII 
=II 
newII !
	JsonFilesII" +
(II+ ,

resultListII, 6
)II6 7
;II7 8
boolKK 
isEmptyKK 
=KK 
!KK 

resultListKK &
.KK& '
AnyKK' *
(KK* +
)KK+ ,
;KK, -
ifLL 
(LL 
isEmptyLL 
)LL 
{MM 
returnNN 
JsonNN 
(NN 
$strNN $
)NN$ %
;NN% &
}OO 
elsePP 
{QQ 
returnRR 
JsonRR 
(RR 
filesRR !
)RR! "
;RR" #
}SS 
}TT 	
publicUU 

JsonResultUU 
GetFileListUU %
(UU% &
)UU& '
{VV 	
varWW 
listWW 
=WW 
filesHelperWW "
.WW" #
GetFileListWW# .
(WW. /
)WW/ 0
;WW0 1
returnXX 
JsonXX 
(XX 
listXX 
,XX 
JsonRequestBehaviorXX 1
.XX1 2
AllowGetXX2 :
)XX: ;
;XX; <
}YY 	
[ZZ 	
HttpGetZZ	 
]ZZ 
public[[ 

JsonResult[[ 

DeleteFile[[ $
([[$ %
string[[% +
file[[, 0
)[[0 1
{\\ 	
filesHelper]] 
.]] 

DeleteFile]] "
(]]" #
file]]# '
)]]' (
;]]( )
return^^ 
Json^^ 
(^^ 
$str^^ 
,^^ 
JsonRequestBehavior^^ 1
.^^1 2
AllowGet^^2 :
)^^: ;
;^^; <
}__ 	
}aa 
}bb þ
?C:\Projects\XML-Parser\XML-Parser\Controllers\HomeController.cs
	namespace 	

XML_Parser
 
. 
Controllers  
{ 
public		 

class		 
HomeController		 
:		  !

Controller		" ,
{

 
public 
ActionResult 
Index !
(! "
)" #
{ 	
ViewData 
[ 
$str 
] 
= 
$str  +
;+ ,
return 
View 
( 
) 
; 
} 	
} 
} 
?C:\Projects\XML-Parser\XML-Parser\Controllers\ViewController.cs
	namespace 	

XML_Parser
 
. 
Controllers  
{ 
public		 

class		 
ViewController		 
:		  !

Controller		" ,
{

 
public 
ActionResult 

XmlContent &
(& '
)' (
{ 	
return 
View 
( 
) 
; 
} 	
} 
} Ã
0C:\Projects\XML-Parser\XML-Parser\Global.asax.cs
	namespace		 	

XML_Parser		
 
{

 
public 

class 
MvcApplication 
:  !
System" (
.( )
Web) ,
., -
HttpApplication- <
{ 
	protected 
void $
Application_BeginRequest /
(/ 0
)0 1
{ 	
if 
( 
Request 
. 
ApplicationPath '
!=( *
$str+ .
&&/ 1
Request2 9
.9 :
ApplicationPath: I
.I J
EqualsJ P
(P Q
RequestQ X
.X Y
PathY ]
,] ^
StringComparison_ o
.o p%
CurrentCultureIgnoreCase	p 
)
 
)
 
{ 
var 
redirectUrl 
=  !
VirtualPathUtility" 4
.4 5
AppendTrailingSlash5 H
(H I
RequestI P
.P Q
ApplicationPathQ `
)` a
;a b
Response 
. 
RedirectPermanent *
(* +
redirectUrl+ 6
)6 7
;7 8
} 
} 	
	protected 
void 
Application_Start (
(( )
)) *
{ 	
AreaRegistration 
. 
RegisterAllAreas -
(- .
). /
;/ 0
FilterConfig 
. !
RegisterGlobalFilters .
(. /
GlobalFilters/ <
.< =
Filters= D
)D E
;E F
RouteConfig 
. 
RegisterRoutes &
(& '

RouteTable' 1
.1 2
Routes2 8
)8 9
;9 :
BundleConfig 
. 
RegisterBundles (
(( )
BundleTable) 4
.4 5
Bundles5 <
)< =
;= >
} 	
} 
} í
8C:\Projects\XML-Parser\XML-Parser\Helpers\FilesHelper.cs
	namespace

 	

XML_Parser


 
.

 
Helpers

 
{ 
public 

class 
FilesHelper 
{ 
String 
	DeleteURL 
= 
null 
;  
String 

DeleteType 
= 
null  
;  !
String 
StorageRoot 
= 
null !
;! "
String 
UrlBase 
= 
null 
; 
String 
tempPath 
= 
null 
; 
String 
serverMapPath 
= 
null #
;# $
public 
FilesHelper 
( 
String !
	DeleteURL" +
,+ ,
String- 3

DeleteType4 >
,> ?
String@ F
StorageRootG R
,R S
StringT Z
UrlBase[ b
,b c
Stringd j
tempPathk s
,s t
Stringu {
serverMapPath	| 
)
 
{ 	
this 
. 
	DeleteURL 
= 
	DeleteURL &
;& '
this 
. 

DeleteType 
= 

DeleteType (
;( )
this 
. 
StorageRoot 
= 
StorageRoot *
;* +
this 
. 
UrlBase 
= 
UrlBase "
;" #
this 
. 
tempPath 
= 
tempPath $
;$ %
this 
. 
serverMapPath 
=  
serverMapPath! .
;. /
} 	
public   
bool   
CreateSampleFile   $
(  $ %
String  % +
file  , 0
)  0 1
{!! 	
var"" 
a"" 
="" 
$str""  
;""  !
if## 
(## 
a## 
==## 
null## 
)## 
{$$ 
}&& 
String'' 
fullPath'' 
='' 
Path'' "
.''" #
Combine''# *
(''* +
StorageRoot''+ 6
,''6 7
file''8 <
)''< =
;''= >
System(( 
.(( 
Diagnostics(( 
.(( 
Debug(( $
.(($ %
	WriteLine((% .
(((. /
fullPath((/ 7
)((7 8
;((8 9
System)) 
.)) 
Diagnostics)) 
.)) 
Debug)) $
.))$ %
	WriteLine))% .
()). /
System))/ 5
.))5 6
IO))6 8
.))8 9
File))9 =
.))= >
Exists))> D
())D E
fullPath))E M
)))M N
)))N O
;))O P
if++ 
(++ 
!++ 
File++ 
.++ 
Exists++ 
(++ 
fullPath++ %
)++% &
)++& '
{,, 
File.. 
... 
Create.. 
(.. 
fullPath.. $
)..$ %
...% &
Dispose..& -
(..- .
)... /
;../ 0
;..1 2

TextWriter// 
tw// 
=// 
new//  #
StreamWriter//$ 0
(//0 1
fullPath//1 9
)//9 :
;//: ;
tw00 
.00 
	WriteLine00 
(00 
$str00 3
)003 4
;004 5
tw11 
.11 
Close11 
(11 
)11 
;11 
return22 
true22 
;22 
}33 
return44 
false44 
;44 
}55 	
public77 
String77 

DeleteFile77  
(77  !
String77! '
file77( ,
)77, -
{88 	
System99 
.99 
Diagnostics99 
.99 
Debug99 $
.99$ %
	WriteLine99% .
(99. /
$str99/ ;
)99; <
;99< =
System:: 
.:: 
Diagnostics:: 
.:: 
Debug:: $
.::$ %
	WriteLine::% .
(::. /
file::/ 3
)::3 4
;::4 5
String<< 
fullPath<< 
=<< 
Path<< "
.<<" #
Combine<<# *
(<<* +
StorageRoot<<+ 6
,<<6 7
file<<8 <
)<<< =
;<<= >
System== 
.== 
Diagnostics== 
.== 
Debug== $
.==$ %
	WriteLine==% .
(==. /
fullPath==/ 7
)==7 8
;==8 9
System>> 
.>> 
Diagnostics>> 
.>> 
Debug>> $
.>>$ %
	WriteLine>>% .
(>>. /
System>>/ 5
.>>5 6
IO>>6 8
.>>8 9
File>>9 =
.>>= >
Exists>>> D
(>>D E
fullPath>>E M
)>>M N
)>>N O
;>>O P
if@@ 
(@@ 
System@@ 
.@@ 
IO@@ 
.@@ 
File@@ 
.@@ 
Exists@@ %
(@@% &
fullPath@@& .
)@@. /
)@@/ 0
{AA 
SystemCC 
.CC 
IOCC 
.CC 
FileCC 
.CC 
DeleteCC %
(CC% &
fullPathCC& .
)CC. /
;CC/ 0
StringDD 
succesMessageDD $
=DD% &
$strDD' +
;DD+ ,
returnEE 
succesMessageEE $
;EE$ %
}FF 
StringGG 
failMessageGG 
=GG  
$strGG! /
;GG/ 0
returnHH 
failMessageHH 
;HH 
}II 	
publicLL 
	JsonFilesLL 
GetFileListLL $
(LL$ %
)LL% &
{MM 	
varOO 
rOO 
=OO 
newOO 
ListOO 
<OO %
ViewDataUploadFilesResultOO 6
>OO6 7
(OO7 8
)OO8 9
;OO9 :
StringQQ 
fullPathQQ 
=QQ 
PathQQ "
.QQ" #
CombineQQ# *
(QQ* +
StorageRootQQ+ 6
)QQ6 7
;QQ7 8
ifRR 
(RR 
	DirectoryRR 
.RR 
ExistsRR  
(RR  !
fullPathRR! )
)RR) *
)RR* +
{SS 
DirectoryInfoTT 
dirTT !
=TT" #
newTT$ '
DirectoryInfoTT( 5
(TT5 6
fullPathTT6 >
)TT> ?
;TT? @
foreachUU 
(UU 
FileInfoUU !
fileUU" &
inUU' )
dirUU* -
.UU- .
GetFilesUU. 6
(UU6 7
)UU7 8
)UU8 9
{VV 
intWW 
SizeIntWW 
=WW  !
	uncheckedWW" +
(WW+ ,
(WW, -
intWW- 0
)WW0 1
fileWW1 5
.WW5 6
LengthWW6 <
)WW< =
;WW= >
rXX 
.XX 
AddXX 
(XX 
UploadResultXX &
(XX& '
fileXX' +
.XX+ ,
NameXX, 0
,XX0 1
SizeIntXX1 8
,XX8 9
fileXX9 =
.XX= >
FullNameXX> F
)XXF G
)XXG H
;XXH I
}YY 
}[[ 
	JsonFiles\\ 
files\\ 
=\\ 
new\\ !
	JsonFiles\\" +
(\\+ ,
r\\, -
)\\- .
;\\. /
return^^ 
files^^ 
;^^ 
}__ 	
publicaa 
voidaa  
UploadAndShowResultsaa (
(aa( )
HttpContextBaseaa) 8
ContentBaseaa9 D
,aaD E
ListaaF J
<aaJ K%
ViewDataUploadFilesResultaaK d
>aad e

resultListaaf p
)aap q
{bb 	
varcc 
httpRequestcc 
=cc 
ContentBasecc )
.cc) *
Requestcc* 1
;cc1 2
Systemdd 
.dd 
Diagnosticsdd 
.dd 
Debugdd $
.dd$ %
	WriteLinedd% .
(dd. /
	Directorydd/ 8
.dd8 9
Existsdd9 ?
(dd? @
tempPathdd@ H
)ddH I
)ddI J
;ddJ K
Stringff 
fullPathff 
=ff 
Pathff "
.ff" #
Combineff# *
(ff* +
StorageRootff+ 6
)ff6 7
;ff7 8
	Directorygg 
.gg 
CreateDirectorygg %
(gg% &
fullPathgg& .
)gg. /
;gg/ 0
foreachkk 
(kk 
Stringkk 
inputTagNamekk (
inkk) +
httpRequestkk, 7
.kk7 8
Fileskk8 =
)kk= >
{ll 
varnn 
headersnn 
=nn 
httpRequestnn )
.nn) *
Headersnn* 1
;nn1 2
varpp 
filepp 
=pp 
httpRequestpp &
.pp& '
Filespp' ,
[pp, -
inputTagNamepp- 9
]pp9 :
;pp: ;
Systemqq 
.qq 
Diagnosticsqq "
.qq" #
Debugqq# (
.qq( )
	WriteLineqq) 2
(qq2 3
fileqq3 7
.qq7 8
FileNameqq8 @
)qq@ A
;qqA B
ifss 
(ss 
stringss 
.ss 
IsNullOrEmptyss (
(ss( )
headersss) 0
[ss0 1
$strss1 >
]ss> ?
)ss? @
)ss@ A
{tt 
UploadWholeFilevv #
(vv# $
ContentBasevv$ /
,vv/ 0

resultListvv1 ;
)vv; <
;vv< =
}ww 
}yy 
}zz 	
private}} 
void}} 
UploadWholeFile}} $
(}}$ %
HttpContextBase}}% 4
requestContext}}5 C
,}}C D
List}}E I
<}}I J%
ViewDataUploadFilesResult}}J c
>}}c d
statuses}}e m
)}}m n
{~~ 	
var
 
request
 
=
 
requestContext
 (
.
( )
Request
) 0
;
0 1
for
 
(
 
int
 
i
 
=
 
$num
 
;
 
i
 
<
 
request
  '
.
' (
Files
( -
.
- .
Count
. 3
;
3 4
i
5 6
++
6 8
)
8 9
{
 
var
 
file
 
=
 
request
 "
.
" #
Files
# (
[
( )
i
) *
]
* +
;
+ ,
String
 
pathOnServer
 #
=
$ %
Path
& *
.
* +
Combine
+ 2
(
2 3
StorageRoot
3 >
)
> ?
;
? @
var
 
fullPath
 
=
 
Path
 #
.
# $
Combine
$ +
(
+ ,
pathOnServer
, 8
,
8 9
Path
: >
.
> ?
GetFileName
? J
(
J K
file
K O
.
O P
FileName
P X
)
X Y
)
Y Z
;
Z [
file
 
.
 
SaveAs
 
(
 
fullPath
 $
)
$ %
;
% &
bool
 
dataPresent
  
=
! "
File
# '
.
' (
ReadAllText
( 3
(
3 4
fullPath
4 <
)
< =
.
= >
Contains
> F
(
F G
$str
G X
)
X Y
||
Z \
File
] a
.
a b
ReadAllText
b m
(
m n
fullPath
n v
)
v w
.
w x
Containsx 
( 
$str 
) 
; 
if
 
(
 
dataPresent
 
)
  
{
 
string
 
data
 
=
  !
File
" &
.
& '
ReadAllText
' 2
(
2 3
fullPath
3 ;
)
; <
.
 
Replace
  
(
  !
$str
! &
,
& '
$str
( -
)
- .
;
. /
byte
 
[
 
]
 
bytes
  
=
! "
Encoding
# +
.
+ ,
ASCII
, 1
.
1 2
GetBytes
2 :
(
: ;
data
; ?
)
? @
;
@ A
File
 
.
 
WriteAllBytes
 &
(
& '
fullPath
' /
,
/ 0
bytes
1 6
)
6 7
;
7 8
}
 
statuses
 
.
 
Add
 
(
 
UploadResult
 )
(
) *
file
* .
.
. /
FileName
/ 7
,
7 8
file
9 =
.
= >
ContentLength
> K
,
K L
file
M Q
.
Q R
FileName
R Z
)
Z [
)
[ \
;
\ ]
}
 
}
 	
public
 '
ViewDataUploadFilesResult
 (
UploadResult
) 5
(
5 6
String
6 <
FileName
= E
,
E F
int
F I
fileSize
J R
,
R S
String
S Y
FileFullPath
Z f
)
f g
{
 	
String
 
getType
 
=
 
System
 #
.
# $
Web
$ '
.
' (
MimeMapping
( 3
.
3 4
GetMimeMapping
4 B
(
B C
FileFullPath
C O
)
O P
;
P Q
var
 
result
 
=
 
new
 '
ViewDataUploadFilesResult
 6
(
6 7
)
7 8
{
 
name
 
=
 
FileName
 
,
  
size
 
=
 
fileSize
 
,
  
type
 
=
 
getType
 
,
 
url
 
=
 
UrlBase
 
+
 
FileName
  (
,
( )
	deleteUrl
 
=
 
	DeleteURL
 %
+
& '
FileName
( 0
,
0 1

deleteType
¡¡ 
=
¡¡ 

DeleteType
¡¡ '
,
¡¡' (
}
¢¢ 
;
¢¢ 
return
££ 
result
££ 
;
££ 
}
¤¤ 	
}
§§ 
public
¨¨ 

class
¨¨ '
ViewDataUploadFilesResult
¨¨ *
{
©© 
public
ªª 
string
ªª 
name
ªª 
{
ªª 
get
ªª  
;
ªª  !
set
ªª" %
;
ªª% &
}
ªª' (
public
«« 
int
«« 
size
«« 
{
«« 
get
«« 
;
«« 
set
«« "
;
««" #
}
««$ %
public
¬¬ 
string
¬¬ 
type
¬¬ 
{
¬¬ 
get
¬¬  
;
¬¬  !
set
¬¬" %
;
¬¬% &
}
¬¬' (
public
­­ 
string
­­ 
url
­­ 
{
­­ 
get
­­ 
;
­­  
set
­­! $
;
­­$ %
}
­­& '
public
®® 
string
®® 
	deleteUrl
®® 
{
®®  !
get
®®" %
;
®®% &
set
®®' *
;
®®* +
}
®®, -
public
¯¯ 
string
¯¯ 

deleteType
¯¯  
{
¯¯! "
get
¯¯# &
;
¯¯& '
set
¯¯( +
;
¯¯+ ,
}
¯¯- .
}
°° 
public
±± 

class
±± 
	JsonFiles
±± 
{
²² 
public
³³ '
ViewDataUploadFilesResult
³³ (
[
³³( )
]
³³) *
files
³³+ 0
;
³³0 1
public
´´ 
string
´´ 

TempFolder
´´  
{
´´! "
get
´´# &
;
´´& '
set
´´( +
;
´´+ ,
}
´´- .
public
µµ 
	JsonFiles
µµ 
(
µµ 
List
µµ 
<
µµ '
ViewDataUploadFilesResult
µµ 7
>
µµ7 8
	filesList
µµ9 B
)
µµB C
{
¶¶ 	
files
·· 
=
·· 
new
·· '
ViewDataUploadFilesResult
·· 1
[
··1 2
	filesList
··2 ;
.
··; <
Count
··< A
]
··A B
;
··B C
for
¸¸ 
(
¸¸ 
int
¸¸ 
i
¸¸ 
=
¸¸ 
$num
¸¸ 
;
¸¸ 
i
¸¸ 
<
¸¸ 
	filesList
¸¸  )
.
¸¸) *
Count
¸¸* /
;
¸¸/ 0
i
¸¸1 2
++
¸¸2 4
)
¸¸4 5
{
¹¹ 
files
ºº 
[
ºº 
i
ºº 
]
ºº 
=
ºº 
	filesList
ºº $
.
ºº$ %
	ElementAt
ºº% .
(
ºº. /
i
ºº/ 0
)
ºº0 1
;
ºº1 2
}
»» 
}
½½ 	
}
¾¾ 
}¿¿ è8
;C:\Projects\XML-Parser\XML-Parser\Helpers\RegexValidator.cs
	namespace 	

XML_Parser
 
. 
Helpers 
{ 
public 

class 
RegexValidator 
{		 
public 
void 
hello 
( 
) 
{ 	
int 
i 
= 
$num 
; 
if 
( 
true 
) 
i 
= 
$num 
; 
} 	
public 
enum 
ValidationType "
{ 	
InternationalMobile 
,  
Email 
, 
	IPAddress 
, 
Trust 
, 
CompanyRegistation 
, 

AlphaChars 
, 
Numeric 
, 
BitCoinAddress 
, 
EthereumAddress 
} 	
private 
readonly 
string -
!ValidInternationalMobileRegString  A
=B C
$strD j
;j k
private 
readonly 
string !
ValidEmailRegexString  5
=6 7
$str	8 À
;
À Á
private   
readonly   
string   %
ValidIPAddressRegexString    9
=  : ;
$str	  < á
;
  á â
private!! 
readonly!! 
string!! !
ValidTrustRegexString!!  5
=!!6 7
$str!!8 R
;!!R S
private"" 
readonly"" 
string"" )
ValidCompanyRegNotRegexString""  =
=""> ?
$str""@ Z
;""Z [
private## 
readonly## 
string## %
ValidAlphaCharRegexString##  9
=##: ;
$str##< I
;##I J
private$$ 
readonly$$ 
string$$ #
ValidNumericRegexString$$  7
=$$8 9
$str$$: D
;$$D E
private%% 
readonly%% 
string%% "
ValidBitcoinRegexSting%%  6
=%%7 8
$str%%9 \
;%%\ ]
private&& 
readonly&& 
string&& #
ValidEthereumRegexSting&&  7
=&&8 9
$str&&: M
;&&M N
private(( 
readonly(( 
ValidationType(( '
validationType((( 6
;((6 7
private)) 
readonly)) 
bool)) %
isCustomRegularExpression)) 7
=))8 9
false)): ?
;))? @
private** 
readonly** 
string** #
regularExpressionString**  7
=**8 9
$str**: <
;**< =
public-- 
RegexValidator-- 
(-- 
ValidationType-- ,
ValidationType--- ;
)--; <
{.. 	
validationType// 
=// 
ValidationType// +
;//+ ,
}00 	
public22 
RegexValidator22 
(22 
string22 $
RegularExpression22% 6
)226 7
{33 	%
isCustomRegularExpression44 %
=44& '
true44( ,
;44, -#
regularExpressionString55 #
=55$ %
RegularExpression55& 7
;557 8
}66 	
public99 
bool99 
Validate99 
(99 
string99 #
value99$ )
)99) *
{:: 	
System;; 
.;; 
Text;; 
.;; 
RegularExpressions;; *
.;;* +
Regex;;+ 0
regularExpression;;1 B
=;;C D
new;;E H
System;;I O
.;;O P
Text;;P T
.;;T U
RegularExpressions;;U g
.;;g h
Regex;;h m
(;;m n'
getRegularExpressionString	;;n 
(
;; 
)
;; 
)
;; 
;
;; 
return== 
regularExpression== $
.==$ %
IsMatch==% ,
(==, -
value==- 2
)==2 3
;==3 4
}>> 	
public@@ 
bool@@ 
Validate@@ 
(@@ 
string@@ #
value@@$ )
,@@) *
System@@+ 1
.@@1 2
Text@@2 6
.@@6 7
RegularExpressions@@7 I
.@@I J
RegexOptions@@J V
options@@W ^
)@@^ _
{AA 	
SystemBB 
.BB 
TextBB 
.BB 
RegularExpressionsBB *
.BB* +
RegexBB+ 0
regularExpressionBB1 B
=BBC D
newBBE H
SystemBBI O
.BBO P
TextBBP T
.BBT U
RegularExpressionsBBU g
.BBg h
RegexBBh m
(BBm n'
getRegularExpressionString	BBn 
(
BB 
)
BB 
,
BB 
options
BB 
)
BB 
;
BB 
returnDD 
regularExpressionDD $
.DD$ %
IsMatchDD% ,
(DD, -
valueDD- 2
)DD2 3
;DD3 4
}EE 	
privateGG 
stringGG &
getRegularExpressionStringGG 1
(GG1 2
)GG2 3
{HH 	
ifJJ 
(JJ %
isCustomRegularExpressionJJ )
)JJ) *
{KK 
returnLL #
regularExpressionStringLL .
;LL. /
}MM 
switchOO 
(OO 
validationTypeOO "
)OO" #
{PP 
caseQQ 
ValidationTypeQQ #
.QQ# $
InternationalMobileQQ$ 7
:QQ7 8
returnRR -
!ValidInternationalMobileRegStringRR <
;RR< =
caseSS 
ValidationTypeSS #
.SS# $
EmailSS$ )
:SS) *
returnTT !
ValidEmailRegexStringTT 0
;TT0 1
caseUU 
ValidationTypeUU #
.UU# $
	IPAddressUU$ -
:UU- .
returnVV %
ValidIPAddressRegexStringVV 4
;VV4 5
caseWW 
ValidationTypeWW #
.WW# $
TrustWW$ )
:WW) *
returnXX !
ValidTrustRegexStringXX 0
;XX0 1
caseYY 
ValidationTypeYY #
.YY# $
CompanyRegistationYY$ 6
:YY6 7
returnZZ )
ValidCompanyRegNotRegexStringZZ 8
;ZZ8 9
case[[ 
ValidationType[[ #
.[[# $

AlphaChars[[$ .
:[[. /
return\\ %
ValidAlphaCharRegexString\\ 4
;\\4 5
case]] 
ValidationType]] #
.]]# $
Numeric]]$ +
:]]+ ,
return^^ #
ValidNumericRegexString^^ 2
;^^2 3
case__ 
ValidationType__ #
.__# $
BitCoinAddress__$ 2
:__2 3
return`` "
ValidBitcoinRegexSting`` 1
;``1 2
caseaa 
ValidationTypeaa #
.aa# $
EthereumAddressaa$ 3
:aa3 4
returnbb #
ValidEthereumRegexStingbb 2
;bb2 3
defaultcc 
:cc 
breakdd 
;dd 
}ee 
returngg 
$strgg 
;gg 
}hh 	
}ii 
}jj »3
6C:\Projects\XML-Parser\XML-Parser\Helpers\XmlHelper.cs
	namespace 	

XML_Parser
 
. 
Helpers 
{ 
public 

class 
	XmlHelper 
{ 
public 
static 
Document 
ParseXml '
(' (
XmlDocument( 3
xmlFile4 ;
); <
{ 	
XmlNode 
root 
= 
xmlFile "
." #
DocumentElement# 2
;2 3
XmlNodeList 
nodes 
= 
root  $
.$ %

ChildNodes% /
;/ 0
Document 
document 
= 
new  #
Document$ ,
(, -
)- .
;. /
document 
. 
Tags 
= 
new 
List  $
<$ %
Tag% (
>( )
() *
)* +
;+ ,
foreach 
( 
XmlNode 
node !
in" $
nodes% *
)* +
{ 
Tag 
tag 
= 
new 
Tag !
(! "
)" #
;# $
Console 
. 
	WriteLine !
(! "
node" &
.& '
Name' +
)+ ,
;, -
tag   
.   
tagName   
=   
node   "
.  " #
Name  # '
;  ' (
Console!! 
.!! 
	WriteLine!! !
(!!! "
$str!!" :
)!!: ;
;!!; <"
XmlAttributeCollection"" &

attributes""' 1
=""2 3
node""4 8
.""8 9

Attributes""9 C
;""C D
tag## 
.## 
attributeKeyValue## %
=##& '
new##( +

Dictionary##, 6
<##6 7
string##7 =
,##= >
string##? E
>##E F
(##F G
)##G H
;##H I
foreach%% 
(%% 
XmlAttribute%% %
	attribute%%& /
in%%0 2

attributes%%3 =
)%%= >
{&& 
tag'' 
.'' 
attributeKeyValue'' )
.'') *
Add''* -
(''- .
	attribute''. 7
.''7 8
Name''8 <
,''< =
	attribute''> G
.''G H
Value''H M
)''M N
;''N O
Console(( 
.(( 
	WriteLine(( %
(((% &
	attribute((& /
.((/ 0
Name((0 4
+((5 6
$str((7 =
+((> ?
	attribute((@ I
.((I J
Value((J O
)((O P
;((P Q
}++ 
if-- 
(-- 
node-- 
.-- 
HasChildNodes-- &
)--& '
{.. 
tag// 
.// 
hasChildTag// #
=//$ %
true//& *
;//* +
tag00 
.00 
childTag00  
=00! "
new00# &
ChildTag00' /
(00/ 0
)000 1
;001 2
XmlNodeList11 

childNodes11  *
=11+ ,
node11- 1
.111 2

ChildNodes112 <
;11< =
foreach33 
(33 
XmlNode33 $
	childNode33% .
in33/ 1

childNodes332 <
)33< =
{44 "
XmlAttributeCollection55 .
childAttributes55/ >
=55? @
	childNode55A J
.55J K

Attributes55K U
;55U V
if66 
(66 
childAttributes66 +
!=66, .
null66/ 3
)663 4
{665 6
Console77 
.77  
	WriteLine77  )
(77) *
$str77* .
)77. /
;77/ 0
if99 
(99 
childAttributes99 +
.99+ ,
Count99, 1
==992 4
$num995 6
)996 7
{:: 
break;; !
;;;! "
}<< 
tag>> 
.>> 
childTag>> $
.>>$ %
childTagname>>% 1
=>>2 3
	childNode>>4 =
.>>= >
Name>>> B
;>>B C
Console@@ 
.@@  
	WriteLine@@  )
(@@) *
$str@@* =
+@@> ?
	childNode@@@ I
.@@I J
Name@@J N
)@@N O
;@@O P
ConsoleAA 
.AA  
	WriteLineAA  )
(AA) *
$strAA* ;
)AA; <
;AA< =
tagEE 
.EE 
childTagEE $
.EE$ %
childTagCountEE% 2
=EE3 4
childAttributesEE5 D
.EED E
CountEEE J
;EEJ K
tagHH 
.HH  
childTagHH  (
.HH( )"
childAttributeKeyValueHH) ?
=HH@ A
newHHB E

DictionaryHHF P
<HHP Q
stringHHQ W
,HHW X
stringHHY _
>HH_ `
(HH` a
)HHa b
;HHb c
foreachII #
(II$ %
XmlAttributeII% 1
	attributeII2 ;
inII< >
childAttributesII? N
)IIN O
{JJ 
ConsoleKK  '
.KK' (
	WriteLineKK( 1
(KK1 2
	attributeKK2 ;
.KK; <
NameKK< @
+KKA B
$strKKC I
+KKJ K
	attributeKKL U
.KKU V
ValueKKV [
)KK[ \
;KK\ ]
tagLL  #
.LL# $
childTagLL$ ,
.LL, -"
childAttributeKeyValueLL- C
.LLC D
AddLLD G
(LLG H
	attributeLLH Q
.LLQ R
NameLLR V
,LLV W
	attributeLLX a
.LLa b
ValueLLb g
)LLg h
;LLh i
}MM 
ConsoleOO 
.OO  
	WriteLineOO  )
(OO) *
$strOO* .
)OO. /
;OO/ 0
}PP 
}QQ 
}RR 
ConsoleTT 
.TT 
	WriteLineTT !
(TT! "
$strTT" &
)TT& '
;TT' (
documentUU 
.UU 
TagsUU 
.UU 
AddUU !
(UU! "
tagUU" %
)UU% &
;UU& '
}VV 
ConsoleWW 
.WW 
	WriteLineWW 
(WW 
documentWW &
)WW& '
;WW' (
ConsoleXX 
.XX 
	WriteLineXX 
(XX 
$strXX 3
)XX3 4
;XX4 5
returnYY 
documentYY 
;YY 
}[[ 	
}\\ 
}]] 
4C:\Projects\XML-Parser\XML-Parser\Models\Document.cs
	namespace 	

XML_Parser
 
. 
Models 
{ 
public 

class 
Document 
{		 
public

 
List

 
<

 
Tag

 
>

 
Tags

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
} 
public 

class 
Tag 
{ 
public 
string 
tagName 
{ 
get  #
;# $
set% (
;( )
}* +
public 

Dictionary 
< 
string  
,  !
string" (
>( )
attributeKeyValue* ;
{< =
get> A
;A B
setC F
;F G
}H I
public 
bool 
hasChildTag 
{  !
get" %
;% &
set' *
;* +
}, -
public 
ChildTag 
childTag  
{! "
get# &
;& '
set( +
;+ ,
}- .
} 
public 

class 
ChildTag 
{ 
public 
string 
childTagname "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
childTagCount  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 

Dictionary 
< 
string  
,  !
string" (
>( )"
childAttributeKeyValue* @
{A B
getC F
;F G
setH K
;K L
}M N
} 
} Ñ
:C:\Projects\XML-Parser\XML-Parser\Models\FilesViewModel.cs
	namespace 	

XML_Parser
 
. 
Models 
{ 
public 

class 
FilesViewModel 
{		 
public

 %
ViewDataUploadFilesResult

 (
[

( )
]

) *
Files

+ 0
{

1 2
get

3 6
;

6 7
set

8 ;
;

; <
}

= >
} 
} Ø
8C:\Projects\XML-Parser\XML-Parser\Models\XmlViewModel.cs
	namespace 	

XML_Parser
 
. 
Models 
{ 
public 

class 
XmlViewModel 
{ 
public 
string 
name 
{ 
get  
;  !
set" %
;% &
}' (
public 
Document 
	parsedXml !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
bool 
isEmptyParam  
{! "
get# &
;& '
set( +
;+ ,
}- .
}		 
}

 ç
<C:\Projects\XML-Parser\XML-Parser\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str %
)% &
]& '
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str '
)' (
]( )
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
["" 
assembly"" 	
:""	 

AssemblyVersion"" 
("" 
$str"" $
)""$ %
]""% &
[## 
assembly## 	
:##	 

AssemblyFileVersion## 
(## 
$str## (
)##( )
]##) *